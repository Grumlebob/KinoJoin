@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <div class="flex items-center">
            <p class="mr-2 hidden md:block">
                Hej, @context.User.Identity.Name!
            </p>
            <a href="#" @onclick="BeginSignOut">
                <Button Variant="Button.ButtonVariant.White">
                    Log ud
                </Button>
            </a>
        </div>
    </Authorized>
    <NotAuthorized>
        @if (Navigation.BaseUri.Contains("https"))
        {
            <a href="authentication/login">
                <Button Variant="Button.ButtonVariant.Black">
                    Log ind
                </Button>
            </a>
        }
    </NotAuthorized>
</AuthorizeView>

@code{

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

}