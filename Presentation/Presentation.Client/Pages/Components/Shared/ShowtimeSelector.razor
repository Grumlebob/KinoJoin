@inject IJSRuntime JsRuntime

@if (Showtimes.Count == 0)
{
    return;
}

<div class="mb-3 w-fit space-y-1  mt-10 ">
    <p class="font-semibold pl-2">@LegendTitle</p>
    <div class="mb-2 divide-x-2 flex w-fit">
        @foreach (var option in SelectOptions)
        {
            <div class="px-2 ">
                <div class="rounded px-1 shadow-md  bg-@option.Color ">
                    <p>@option.VoteOption</p>
                </div>
            </div>
        }
    </div>
</div>
<div class="space-y-5 ">
    <Virtualize Items="_showtimesByMovieList" Context="showtimesByMovie" OverscanCount="3">
        <ItemContent>
            @{ var movie = showtimesByMovie.First().Movie; }
            <ShowtimeSelectorHeading Movie="movie">
                @{ var showtimesByCinemaList = showtimesByMovie.GroupBy(s => s.Cinema.Id).ToList(); }
                <Virtualize Items="showtimesByCinemaList" OverscanCount="8" Context="showtimesByCinema" ItemSize="300">
                    <ItemContent>
                        <CinemaShowtimes Showtimes="Showtimes" Votes="Votes" SelectOptions="SelectOptions" VotesChanged="VotesChanged" ShowtimesByCinema="showtimesByCinema" ShowtimesByMovie="showtimesByMovie"/>
                    </ItemContent>
                    <Placeholder>
                        <LoadingCircle/>
                    </Placeholder>
                </Virtualize>
            </ShowtimeSelectorHeading>
        </ItemContent>
        <Placeholder>
            <LoadingCircle/>
        </Placeholder>
    </Virtualize>
</div>

@if (Showtimes.Count > 0)
{
    <Virtualize Items="MoviesWithOutShowTimes" Context="movie" OverscanCount="5">
        <ItemContent>
            <ShowtimeSelectorHeading Movie="movie">
                <div class="inline-flex items-center justify-center gap-4 rounded bg-gray-300 p-2">
                    <span>Ingen forestillinger fundet for denne film med de valgte filtre</span>
                </div>
            </ShowtimeSelectorHeading>
        </ItemContent>
        <Placeholder>
            <LoadingCircle/>
        </Placeholder>
    </Virtualize>
}


@code {

    [Parameter] public string LegendTitle { get; set; } = "";

    [Parameter] public List<Showtime> Showtimes { get; set; } = [];

    [Parameter] public List<Movie> MoviesWithOutShowTimes { get; set; } = [];

    [Parameter] public ICollection<ParticipantVote> Votes { get; set; } = [];

    [Parameter] public EventCallback<ICollection<ParticipantVote>> VotesChanged { get; set; }

    [Parameter] public required List<SelectOption> SelectOptions { get; set; }

    private List<IGrouping<int, Showtime>> _showtimesByMovieList = [];

    protected override void OnInitialized()
    {
        _showtimesByMovieList = Showtimes.GroupBy(s => s.Movie.Id).ToList();
    }

}