@inject IJSRuntime JsRuntime

<style>

.empty-showtime {
    background-image: repeating-linear-gradient(
        +45deg,
        #ffffff, /* Lighter shade of gray for the streak */
        #ffffff 10px,
        #d5d5d5 10px, /* Darker shade of gray for the space between streaks */
        #d5d5d5 20px
    );
}

</style>

@if (Showtimes.Count == 0)
{
    return;
}

<div class="mb-3 w-fit space-y-1 ">
    <p class="font-semibold pl-2">Tryk p√• de tider du kan</p>
    <div class="mb-2 divide-x-2 flex w-fit">
        @foreach (var option in SelectOptions)
        {
            <div class="px-2 ">
                <div class="rounded px-1 shadow-sm  bg-@option.Color ">
                    <p>@option.VoteOption</p>
                </div>
            </div>
        }
    </div>
</div>
<div class="space-y-5 ">
    @foreach (var showtimesByMovie in Showtimes.GroupBy(s => s.Movie.Id))
    {
        var movie = showtimesByMovie.First().Movie;
        <ShowtimeSelectorHeading Movie="movie">
            @foreach (var showtimesByCinema in showtimesByMovie.GroupBy(s => s.Cinema.Id))
            {
                var cinema = showtimesByCinema.First().Cinema;
                <CinemaShowtimes Showtimes="Showtimes" VotedFor="VotedFor" SelectOptions="SelectOptions" Cinema="cinema" VotedForChanged="VotedForChanged" ShowtimesByCinema="showtimesByCinema" ShowtimesByMovie="showtimesByMovie"/>
            }
        </ShowtimeSelectorHeading>
    }
</div>

@if (Showtimes.Count > 0)
{
    foreach (var movie in MoviesWithOutShowTimes)
    {
        <ShowtimeSelectorHeading Movie="movie">
            <div class="inline-flex items-center justify-center gap-4 rounded bg-gray-300 p-2">
                <span>Ingen forestillinger fundet for denne film med de valgte filtre</span>
            </div>
        </ShowtimeSelectorHeading>
    }
}



@code {

    [Parameter] public List<Showtime> Showtimes { get; set; } = new();

    [Parameter] public List<Movie> MoviesWithOutShowTimes { get; set; } = [];

    [Parameter] public List<(int showtimeId, int vote)> VotedFor { get; set; } = [];

    [Parameter] public EventCallback<List<(int ShowtimeId, int Vote)>> VotedForChanged { get; set; }

    //Disse selectoptions er sat til create siden....
    [Parameter] public List<SelectOption> SelectOptions { get; set; } = new List<SelectOption>() { new SelectOption() { VoteOption = "Kan ikke", Color = "gray-200" }, new SelectOption() { VoteOption = "Kan godt", Color = "success" } };

    private async Task HandleShowtimeClick(int selectOptionIndex, int showtimeId)
    {
        var next = (VotedFor[selectOptionIndex].vote + 1) % SelectOptions.Count;
        VotedFor[selectOptionIndex] = (showtimeId, next);
        await VotedForChanged.InvokeAsync(VotedFor);
    }

}