@inject IJSRuntime JsRuntime

@if (Showtimes.Count == 0)
{
    return;
}

<div class="mb-3 w-fit space-y-1  mt-10 ">
    <p class="font-semibold pl-2">Tryk p√• de tider du kan</p>
    <div class="mb-2 divide-x-2 flex w-fit">
        @foreach (var option in SelectOptions)
        {
            <div class="px-2 ">
                <div class="rounded px-1 shadow-md  bg-@option.Color ">
                    <p>@option.VoteOption</p>
                </div>
            </div>
        }
    </div>
</div>
<div class="space-y-5 ">
    @foreach (var showtimesByMovie in Showtimes.GroupBy(s => s.Movie.Id))
    {
        var movie = showtimesByMovie.First().Movie;
        <ShowtimeSelectorHeading Movie="movie">
            @foreach (var showtimesByCinema in showtimesByMovie.GroupBy(s => s.Cinema.Id))
            {
                var cinema = showtimesByCinema.First().Cinema;
                <CinemaShowtimes Showtimes="Showtimes" Votes="Votes" SelectOptions="SelectOptions" Cinema="cinema" VotesChanged="VotesChanged" ShowtimesByCinema="showtimesByCinema" ShowtimesByMovie="showtimesByMovie"/>
            }
        </ShowtimeSelectorHeading>
    }
</div>

@if (Showtimes.Count > 0)
{
    foreach (var movie in MoviesWithOutShowTimes)
    {
        <ShowtimeSelectorHeading Movie="movie">
            <div class="inline-flex items-center justify-center gap-4 rounded bg-gray-300 p-2">
                <span>Ingen forestillinger fundet for denne film med de valgte filtre</span>
            </div>
        </ShowtimeSelectorHeading>
    }
}



@code {

    [Parameter] public List<Showtime> Showtimes { get; set; } = [];

    [Parameter] public List<Movie> MoviesWithOutShowTimes { get; set; } = [];

    [Parameter] public ICollection<ParticipantVote> Votes { get; set; } = [];

    [Parameter] public EventCallback<ICollection<ParticipantVote>> VotesChanged { get; set; }

    //Default options for create page
    [Parameter] public required List<SelectOption> SelectOptions { get; set; }

}