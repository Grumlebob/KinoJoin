@inject IJSRuntime JsRuntime

<div class="mb-8">
    <div class="my-5 h-px w-full rounded-full bg-gray-300"></div>
    <div class="grid gap-4 grid-cols-[0.5fr_1fr] grid-rows-[min(100px)_auto] md:grid-cols-[200px_1fr]">
        <!-- PosterImage -->
        @if(_shouldRender){
            <div class="row-span-2 space-y-2 md:min-w-48 md:sticky md:top-16 md:self-start">
                <a href=@($"https://kino.dk{Movie.KinoURL}") target="_blank">
                    <img src="@Movie.ImageUrl" alt="Movie Poster" class="max-h-full w-full rounded-sm shadow"/>
                </a>
                <!--Læs mere og trailer-->
                <div class="hidden flex-col items-center px-3 space-y-1 md:flex">
                    <a href=@($"https://kino.dk{Movie.KinoURL}") target="_blank" class="w-full rounded-full border border-black px-3 py-2 text-center shadow transition duration-100 duration-300 font-label hover:bg-neutral-950 hover:text-white">Læs mere</a>
                    <button class="w-full rounded-full border border-black px-3 py-2 shadow transition duration-100 duration-300 font-label hover:bg-neutral-950 hover:text-white" @onclick="async () => { await ShowMovieTrailer(Movie); }">Se trailer</button>
                </div>
            </div>
           } 
        <!-- MovieHeader -->
        <div class="col-start-2">
            <div class="flex flex-col space-y-2">
                <div class="flex justify-between">
                    <a href=@($"https://kino.dk{Movie.KinoURL}") target="_blank" class="block w-fit text-black no-underline divide-y-8">

                        <h2 class="text-2xl font-bold md:text-4xl">@Movie.Title</h2>
                    </a>
                    <button @onclick="ToggleCollapse" class="translate-x-8">
                        <svg class="transition-transform" style="@(_shouldRender ? "transform: rotate(0deg)" : "transform: rotate(-90deg)")" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
                        </svg>
                    </button>

                </div>
                @if(_shouldRender){
                    <div class="block">
                        <div class="inline-flex flex-col items-start justify-between gap-2 rounded md:flex-row md:items-center md:gap-4 md:p-2">
                            <!-- movie-info -->
                            <div class="flex space-x-1">
                                <span class="hidden text-sm text-neutral-400 font-label md:block">Premiere</span>
                                <span class="text-sm text-neutral-400 font-label">@Movie.PremiereDate </span>
                            </div>
                            <span class="hidden text-sm text-neutral-400 md:block">|</span>
                            <div class="flex space-x-1">
                                <span class="hidden text-sm text-neutral-400 font-label md:block">Varighed</span>
                                <span class="text-sm text-neutral-400 font-label">@Movie.Duration min</span>
                            </div>
                        </div>
                    </div>
                    }
                @if(_shouldRender){
                <div class="block md:hidden">
                    <!--Læs mere og trailer mobile-->
                    <a href=@($"https://kino.dk{Movie.KinoURL}") target="_blank" class="inline-block w-32 rounded-full border border-black px-3 py-2 text-center transition duration-100 font-label hover:bg-neutral-950 hover:text-white">Læs mere</a>
                </div>
                <div class="block md:hidden">
                    <button @onclick="async () => { await ShowMovieTrailer(Movie); }" class="inline-block w-32 rounded-full border border-black px-3 py-2 transition duration-100 font-label hover:bg-neutral-950 hover:text-white">Se trailer</button>
                </div>
                }
            </div>
        </div>
            
        

        <div class="col-span-3 md:col-start-2 md:row-start-2 md:row-end-3">
            
        @if (_shouldRender)
        {
            @if (ChildContent is not null)
            {
                @ChildContent
            }
            }
        </div>
    </div>
</div>

@if (_trailerUrl != null)
{
    <div class="fixed top-0 left-0 flex h-screen w-screen items-center justify-center">
        <div class="relative h-3/5 w-3/5">
            <!-- Adjust width and height as necessary -->
            <iframe src="@_trailerUrl" width="100%" height="100%" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
            </iframe>
            <button class="absolute top-0 right-0 mt-2 mr-2 rounded bg-error hover:bg-error-dark" onclick="@(() => { _trailerUrl = null; })">
                <CrossIcon Class="fill-white"/>
            </button>
        </div>
    </div>
}


@code {


    [Parameter] public required Movie Movie { get; set; }

    // add children
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private string? _trailerUrl;

    private bool _shouldRender = true;

    private async Task ShowMovieTrailer(Movie movie)
    {
        var client = new HttpClient();
        var apiString = $"https://api.kino.dk{movie.KinoURL}?region=content&format=json";
        var json = await client.GetStringAsync(apiString);

        var movieRoot = JsonConvert.DeserializeObject<MovieRoot>(json);
        if (movieRoot?.Content?.field_trailer?.FieldMediaOembedVideo?.trailerUrl == null) //no video found
        {
            await JsRuntime.InvokeVoidAsync("open", $"https://www.youtube.com/results?search_query={movie.Title}+trailer", "_blank"); //search in youtube
            return;
        }

        var uri = new Uri(movieRoot.Content.field_trailer.FieldMediaOembedVideo.trailerUrl);
        var videoId = uri.Segments.Last() == "watch" ? HttpUtility.ParseQueryString(uri.Query)["v"] : uri.Segments.Last();

        if (videoId == null) await JsRuntime.InvokeVoidAsync("open", $"https://www.youtube.com/results?search_query={movie.Title}+trailer", "_blank"); //search in youtube
        else _trailerUrl = $"https://www.youtube.com/embed/{videoId}";
    }

    private void ToggleCollapse()
    {
        _shouldRender = !_shouldRender;
    }

}
