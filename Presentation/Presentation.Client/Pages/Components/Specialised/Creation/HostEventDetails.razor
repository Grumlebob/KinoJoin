<!-- Text Input for Title -->
<p class="text-lg font-semibold text-blue-600 mb-0.5">Event Titel</p>
<input class="mb-2 w-full rounded-md border border-gray-300 px-4 py-2 shadow-sm focus:border-transparent focus:outline-none focus:ring-4 focus:ring-blue-500 md:w-96"
       type="text" placeholder="Titel"
       value="@Title" @oninput="@(e => { var v = e.Value?.ToString() ?? string.Empty; Title = v; TitleChanged.InvokeAsync(v); })"/>

<!-- Textarea for Description -->
<p class="text-lg font-semibold text-blue-600 mb-0.5">Event Beskrivelse</p>
<textarea class="mb-2 w-full rounded-md border border-gray-300 px-4 py-2 shadow-sm focus:border-transparent focus:outline-none focus:ring-4 focus:ring-blue-500 md:w-96"
          placeholder="Beskrivelse (valgfrit)" 
          value="@Description" @oninput="@(e => { var v = e.Value?.ToString() ?? string.Empty; Description = v; DescriptionChanged.InvokeAsync(v); })"></textarea>

<!-- Paragraph for Deadline -->
<p class="text-lg font-semibold text-blue-600 mb-0.5">Deadline</p>
<input class="mb-2 w-full rounded-md border border-gray-300 px-4 py-2 shadow-sm focus:border-transparent focus:outline-none focus:ring-4 focus:ring-blue-500 md:w-96"
       type="date" placeholder="Deadline" value="@Deadline.ToString("yyyy-MM-dd")" @oninput="HandleDeadlineInput"/>


@code {

    [Parameter] public DateTime Deadline { get; set; }
    [Parameter] public EventCallback<DateTime> DeadlineChanged { get; set; }

    [Parameter] public string Title { get; set; } = "";
    [Parameter] public EventCallback<string> TitleChanged { get; set; }

    [Parameter] public string Description { get; set; } = "";
    [Parameter] public EventCallback<string> DescriptionChanged { get; set; }
    
    private void HandleDeadlineInput(ChangeEventArgs e)
    {
        if (!DateTime.TryParse(e.Value?.ToString(), CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal, out var parsedDate)) return;
        Deadline = parsedDate.ToUniversalTime();
        DeadlineChanged.InvokeAsync(Deadline);
    }
}