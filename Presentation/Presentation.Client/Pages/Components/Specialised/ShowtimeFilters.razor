@using Microsoft.Extensions.Primitives
<h2 style="margin-top: 10px">Tilpas filtrer</h2>

<p style="margin-bottom: 0">Film</p>
<SearchableCheckboxList @ref="MovieCheckList" IdsToLabels="@MovieIdsToNames"/>

<p style="margin-bottom: 0">Biografer</p>
<SearchableCheckboxList @ref="CinemaCheckList" IdsToLabels="@CinemaIdsToNames"/>

<p style="margin-bottom: 0">Genrer</p>
<SearchableCheckboxList @ref="GenreCheckList" IdsToLabels="@GenreIdsToNames"/>

<p style="margin-bottom: 0">Start dato</p>
<input style="margin-bottom: 10px" type="date" @bind="StartDate"/>

<br/>

<p style="margin-bottom: 0">Slut dato</p>
<input style="margin-bottom: 10px" type="date" @bind="EndDate"/>

@code {
    //NOTE: This component is quite shallow. When done move the content (checklists etc) out in JoinCreate for easier access, less pass through and more depth
    //The method that uses the filters to get show times can then also be moved to JoinCreate
    [Parameter]
    public Dictionary<int, string> CinemaIdsToNames { get; set; } = new();
    [Parameter]
    public Dictionary<int, string> MovieIdsToNames { get; set; } = new();
    [Parameter]
    public Dictionary<int, string> GenreIdsToNames { get; set; } = new();

    public SearchableCheckboxList MovieCheckList { get; private set; } = new();
    public SearchableCheckboxList CinemaCheckList { get; private set; } = new();
    public SearchableCheckboxList GenreCheckList { get; private set; } = new();
    
    public DateTime StartDate { get; set; } = DateTime.Today;
    public DateTime EndDate { get; set; } = DateTime.Today.AddDays(30);

    public async Task<List<Showtime>> GetShowtimesFromFilter()
    {
        var movieIds = MovieCheckList.SelectedItems.ToList();
        var cinemaIds = CinemaCheckList.SelectedItems.ToList();
        var genreIds = GenreCheckList.SelectedItems.ToList();
        var fromDate = StartDate.ToString("format here");
        var toDate = EndDate.ToString("format here");
        
        var filterString = new StringBuilder();
        
        for (var i = 0; i < movieIds.Count; i++)
        {
            filterString.Append($"&movies[{i}]={movieIds[i]}");
        }
        for (var i = 0; i < cinemaIds.Count; i++)
        {
            filterString.Append($"&cinemas[{i}]={cinemaIds[i]}");
        }
        for (var i = 0; i < genreIds.Count; i++)
        {
            filterString.Append($"&genres[{i}]={genreIds[i]}");
        }

        filterString.Append($"STARTDATE??={fromDate}"); //format=2024-02-28T08:12:00.000Z
        filterString.Append($"ENDDATE??={toDate}"); //format=2024-03-01T08:12:00.000Z
        
        var apiUrl = "https://api.kino.dk/ticketflow/showtimes?sort=most_purchased" + filterString
                     +"&format=json";
        var httpClient = new HttpClient();
        var json = await httpClient.GetStringAsync(apiUrl);
        
        //convert json to showtimes
        
        return [];
    }
    
}